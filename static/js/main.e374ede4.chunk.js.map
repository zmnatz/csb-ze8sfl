{"version":3,"sources":["App.js","index.js"],"names":["App","useState","bar","setBar","with35","setWith35","with55","setWith55","map","useMemo","i","plates","weight","Number","parseInt","console","log","htmlFor","type","step","max","min","id","value","onChange","e","target","checked","Table","size","TableHead","TableRow","TableCell","component","TableBody","Object","entries","filter","plate","amount","join","rootElement","document","getElementById","createRoot","render"],"mappings":"6MAUe,SAASA,IACtB,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4BJ,oBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACMC,EAAMC,mBAAQ,WAGlB,IAFA,IAAMD,EAAM,CAAC,EACTE,EAAIR,EACDQ,EAAI,KAAK,CACd,IAAMC,EAAS,CAAC,EACZC,EAASF,EAAIR,EACbI,IACFK,EAAO,IAAQE,OAAOC,SAASF,EAAS,IAAK,IAC7CA,GAAU,KAEZD,EAAO,IAAQE,OAAOC,SAASF,EAAS,GAAI,IAC5CA,GAAU,GACNR,IACFO,EAAO,IAAQE,OAAOC,SAASF,EAAS,GAAI,IAC5CA,GAAU,IAEZD,EAAO,IAAQE,OAAOC,SAASF,EAAS,GAAI,IAC5CA,GAAU,GACVD,EAAO,IAAQE,OAAOC,SAASF,EAAS,GAAI,IAC5CA,GAAU,GACVD,EAAO,GAAOE,OAAOC,SAASF,EAAS,GAAI,IAC3CA,GAAU,GACVD,EAAO,KAASE,OAAOC,SAASF,EAAS,EAAG,IAC5CJ,EAAIE,GAAKC,EACTD,GAAK,CACN,CAED,OADAK,QAAQC,IAAIR,GACLA,CACR,GAAE,CAACN,EAAKE,EAAQE,IACjB,OACE,qCACE,wDACA,gCACE,uBAAOW,QAAQ,MAAf,wBACA,uBACEC,KAAK,SACLC,KAAM,EACNC,IAAK,GACLC,IAAK,GACLC,GAAG,MACHC,MAAOrB,EACPsB,SAAU,SAACC,GAAD,OAAOtB,EAAOU,OAAOC,SAASW,EAAEC,OAAOH,MAAO,IAA9C,IAGZ,uBAAON,QAAQ,OAAf,oBACA,uBACEC,KAAK,WACLI,GAAG,OACHK,SAAUvB,EACVoB,SAAU,SAACC,GAAD,OAAOpB,GAAWoB,EAAEC,OAAOC,QAA3B,IAEZ,uBAAOV,QAAQ,SAAf,sBACA,uBACEC,KAAK,WACLI,GAAG,SACHK,QAASrB,EACTkB,SAAU,SAACC,GAAD,OAAOlB,EAAUkB,EAAEC,OAAOC,QAA1B,OAGd,eAACC,EAAA,EAAD,CAAOC,KAAK,QAAZ,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,UAAU,KAArB,oBACA,cAACD,EAAA,EAAD,CAAWC,UAAU,KAArB,yBAGJ,cAACC,EAAA,EAAD,UACGC,OAAOC,QAAQ5B,GAAKA,KAAI,mCAAEI,EAAF,KAAUD,EAAV,YACvB,eAACoB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,UAAU,KAArB,SAA2BrB,IAC3B,cAACoB,EAAA,EAAD,UACGG,OAAOC,QAAQzB,GACb0B,QAAO,uCAAyB,CAAzB,IACP7B,KAAI,mCAAE8B,EAAF,KAASC,EAAT,qBAAwBD,EAAxB,cAAmCC,EAAnC,IACJC,KAAK,UANG5B,EADQ,WAelC,CC3FD,IAAM6B,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC7C,EAAD,M","file":"static/js/main.e374ede4.chunk.js","sourcesContent":["import {\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody\n} from \"@mui/material\";\nimport { useState, useMemo } from \"react\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [bar, setBar] = useState(45);\n  const [with35, setWith35] = useState(true);\n  const [with55, setWith55] = useState(false);\n  const map = useMemo(() => {\n    const map = {};\n    let i = bar;\n    while (i < 700) {\n      const plates = {};\n      let weight = i - bar;\n      if (with55) {\n        plates[\"55\"] = Number.parseInt(weight / 110, 10);\n        weight %= 110;\n      }\n      plates[\"45\"] = Number.parseInt(weight / 90, 10);\n      weight %= 90;\n      if (with35) {\n        plates[\"35\"] = Number.parseInt(weight / 70, 10);\n        weight %= 70;\n      }\n      plates[\"25\"] = Number.parseInt(weight / 50, 10);\n      weight %= 50;\n      plates[\"10\"] = Number.parseInt(weight / 20, 10);\n      weight %= 20;\n      plates[\"5\"] = Number.parseInt(weight / 10, 10);\n      weight %= 10;\n      plates[\"2.5\"] = Number.parseInt(weight / 5, 10);\n      map[i] = plates;\n      i += 5;\n    }\n    console.log(map);\n    return map;\n  }, [bar, with35, with55]);\n  return (\n    <>\n      <h1>Plate Math for Dummies</h1>\n      <div>\n        <label htmlFor=\"bar\">Bar Weight</label>\n        <input\n          type=\"number\"\n          step={5}\n          max={85}\n          min={15}\n          id=\"bar\"\n          value={bar}\n          onChange={(e) => setBar(Number.parseInt(e.target.value, 10))}\n        />\n\n        <label htmlFor=\"no35\">No 35s</label>\n        <input\n          type=\"checkbox\"\n          id=\"no35\"\n          checked={!with35}\n          onChange={(e) => setWith35(!e.target.checked)}\n        />\n        <label htmlFor=\"with55\">With 55s</label>\n        <input\n          type=\"checkbox\"\n          id=\"with55\"\n          checked={with55}\n          onChange={(e) => setWith55(e.target.checked)}\n        />\n      </div>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell component=\"th\">Weight</TableCell>\n            <TableCell component=\"th\">Plates</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {Object.entries(map).map(([weight, plates]) => (\n            <TableRow key={weight}>\n              <TableCell component=\"th\">{weight}</TableCell>\n              <TableCell>\n                {Object.entries(plates)\n                  .filter(([, amount]) => amount > 0)\n                  .map(([plate, amount]) => `${plate} x ${amount}`)\n                  .join(\", \")}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}